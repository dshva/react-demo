I have been working on these POCs, but I realized that what might be more helpful is to demonstrate the end goal first.  Similar to the way a building architect does not start on the building before building a complete model and getting approval.

This will also provide a better roadmap for the work I am doing for the POC.

I started writing a long boring document and then decided that it would be better to send a series of videos where I can demonstrate the concepts and provide reasoning for the choices.

The videos are rough, because they really are a rough draft proposal. I am hoping to get any feedback that you have early so that I can put the code together in the best way possible.

The videos are in numbered order and cover various subjects from basic components to unit/integration testing.  I show code examples in several of them in an attempt to show the features and benifits of coding in this style.


The videos can be found in react-demo/videos. In the videos I made the assumption that the viewer may not be familiar with ES6, JSX or React, so forgive me if I explain some simple stuff.

To run this code you do need node/npm, but I noticed npm in the code base so I am assuming you are already using it somewhere.


Get the code
---------------
git clone https://github.com/scottburch/react-demo.git
cd react-demo

Load the npm modules
-----------------------
npm install


Run the demo app
----------------
npm start	(starts a local web browser on port 8000)
point your browser to http://localhost:8000/demo.html


To make code changes start the compiler 
---------------------------------------
npm run-script compile

(This will start a compiler and file watcher which will watch for changes and recompile)


To run tests in a web browser
------------------------------
grunt headed (to create the test/specRunner.html file)
npm run-script compile-tests
npm start (if the web browser is not already running)

To run headless tests
------------------------------
npm run-script compile-tests   (if tests are not already compiled)
npm run-script test-headless





